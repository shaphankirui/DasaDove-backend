// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email     String    @unique
  password  String
  fullName  String
  username  String    @unique
  phone     String    @default("")
  status    String    @default("Active")
  role      String    @default("Admin")
  createdBy String    @default("")
  photoURL  String    @default("https://res.cloudinary.com/dfsd8beyu/image/upload/v1720257318/defaultUser_f7bvpx.webp")
  Blog      Blog[]
  Order     Order[]
  News      News[]
  Tenders   Tenders[]
  Careers   Careers[]

  @@map("users")
}

model Blog {
  id         Int      @id @default(autoincrement())
  title      String
  body       String
  pictureUrl String?
  slug       String?
  createdAt  DateTime @default(now())
  userId     Int
  user       User     @relation(fields: [userId], references: [id])

  @@map("blogs")
}

model Product {
  id              Int       @id @default(autoincrement())
  name            String    @unique
  description     String?
  pictureUrl      String?
  productIdNumber String    @unique
  reorderLevel    Int?
  availability    Boolean?  @default(true)
  quantity        Int?
  storeQuantity   Int?
  countable       Boolean?  @default(true)
  price           Float?
  expiryDate      DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  categoryId      Int

  category Category @relation(fields: [categoryId], references: [id])

  @@map("products")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String
  pictureUrl  String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Product     Product[]

  @@map("categories")
}

model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  items              Json // Store order items as JSON
  total              Float
  cashPaid           Float
  mpesaPaid          Float
  bankPaid           Float
  totalAmountPaid    Float
  taxAmount          Float
  discountAmount     Float
  customerId         Int
  printerIp          String
  isVoided           Boolean
  voidedBy           Boolean
  userId             Int
  mpesaTransactionId String             @default("")
  user               User               @relation(fields: [userId], references: [id])
  MpesaTransaction   MpesaTransaction[]

  @@map("orders")
}

model News {
  id         Int      @id @default(autoincrement())
  title      String
  body       String
  pictureUrl String?
  slug       String?
  createdAt  DateTime @default(now())
  userId     Int
  user       User     @relation(fields: [userId], references: [id])

  @@map("news")
}

model Team {
  id         Int      @id @default(autoincrement())
  fullName   String
  position   String
  email      String
  phone      String
  is_active  Boolean
  pictureUrl String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("team")
}

model Tenders {
  id                 Int      @id @default(autoincrement())
  title              String
  slug               String?
  description        String
  aplicationDateLine String
  is_open            Boolean
  fileUrl            String?
  pictureUrl         String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  userId             Int
  user               User     @relation(fields: [userId], references: [id])

  @@map("tenders")
}

model Careers {
  id                 Int      @id @default(autoincrement())
  title              String
  slug               String?
  description        String
  requirements       String
  aplicationDateLine String
  is_open            Boolean
  fileUrl            String?
  pictureUrl         String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  userId             Int
  user               User     @relation(fields: [userId], references: [id])

  @@map("careers")
}

model MpesaTransaction {
  id                 Int       @id @default(autoincrement())
  merchantRequestID  String
  checkoutRequestID  String
  resultCode         Int
  resultDesc         String
  amount             Float?
  mpesaReceiptNumber String?
  transactionDate    DateTime?
  phoneNumber        String?
  orderId            Int?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  order Order? @relation(fields: [orderId], references: [id])

  @@map("mpesa_transactions")
}

model Quotation {
  id              Int      @id @default(autoincrement())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  referenceNumber String   @unique
  supplierId      Int
  items           Json
  totalAmount     Float
  status          String
  supplier        Supplier @relation(fields: [supplierId], references: [id])

  @@map("quotations")
}

model LocalPurchaseOrder {
  id              Int      @id @default(autoincrement())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  referenceNumber String   @unique
  supplierId      Int
  items           Json
  totalAmount     Float
  status          String
  supplier        Supplier @relation(fields: [supplierId], references: [id])

  @@map("local_purchase_orders")
}

model Supplier {
  id                   Int                  @id @default(autoincrement())
  name                 String
  phone                String
  totalUnpaidSuppliers Int
  deleted              Boolean
  Quotation            Quotation[]
  LocalPurchaseOrder   LocalPurchaseOrder[]

  @@map("suppliers")
}

model Customer {
  id          Int      @id @default(autoincrement())
  fullName    String
  phoneNumber String
  dueCredit   Float?
  isActive    Boolean?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("customers")
}

model CreditSale {
  id                      Int      @id @default(autoincrement())
  customer_id             Int
  order_id                Int
  credit_amount           Float
  order_date              DateTime
  payment_date            DateTime
  amount_paid             Float
  fully_paid              Float
  customer_name           String
  created_by              String
  shift_id                Int
  phone_number            String
  order_remarks           String? // Optional
  national_id             String? // Optional
  confirm_delete          Boolean? // Optional
  cash_paid               Float? // Optional
  mpesa_paid              Float? // Optional
  bank_paid               Float? // Optional
  mpesa_confirmation_code String? // Optional
  bank_confirmation_code  String? // Optional
  balance                 Float? // Optional
  complementary_of        String? // Optional
  complimentary_amount    Float? // Optional
  voucher_code            String? // Optional
  voucher_amount          Float? // Optional
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  @@map("credit_sales")
}
